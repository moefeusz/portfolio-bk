// revamp-anim-A â€” animations M + cursor aura, filters, typing, parallax
const MOTION_LEVEL = 'M'; // S / M / L

document.addEventListener('DOMContentLoaded', () => {
Â  // Typing
Â  const roles = ['Front-end Developer', '3D Designer', 'UI/UX Enthusiast'];
Â  const el = document.getElementById('typed-text');
Â  let i=0,pos=0,dir=1,hold=0; const raf=(cb)=>requestAnimationFrame(cb);
Â  function tick(){
Â  Â  if(!el) return;
Â  Â  if(hold>0){ hold--; return raf(tick); }
Â  Â  const txt = roles[i]; pos += dir; el.textContent = txt.slice(0,pos);
Â  Â  if(pos===txt.length){ dir=-1; hold=30; }
Â  Â  if(pos===0 && dir===-1){ dir=1; i=(i+1)%roles.length; hold=12; }
Â  Â  raf(tick);
Â  }
Â  tick();

Â  // Scroll-reveal
Â  const obs=new IntersectionObserver((entries)=>{
Â  Â  entries.forEach(e=>{ if(e.isIntersecting){ e.target.classList.add('in'); obs.unobserve(e.target); }});
Â  },{threshold:.12, rootMargin:"0px 0px -10% 0px"});
Â  document.querySelectorAll('.reveal,.section,.card,.pricing-card,.project-card').forEach(n=>obs.observe(n));

Â  // Hero parallax
Â  const hero=document.querySelector('.hero'), heroBg=document.querySelector('.hero-bg'); let lastY=0;
Â  function onScroll(){
Â  Â  if(!hero||!heroBg) return;
Â  Â  const rect=hero.getBoundingClientRect(); const sc=Math.min(1,Math.max(0,1-(rect.top/rect.height)));
Â  Â  const scaleBoost = MOTION_LEVEL==='L'?0.06: MOTION_LEVEL==='M'?0.04:0.02;
Â  Â  const y=(rect.top*-0.06); if(Math.abs(y-lastY)<0.5) return;
Â  Â  heroBg.style.transform=`translate3d(0,${y}px,0)`;
Â  Â  heroBg.querySelectorAll('video,img').forEach(v=> v.style.transform=`scale(${1.04+scaleBoost*sc})`);
Â  Â  lastY=y;
Â  }
Â  onScroll(); window.addEventListener('scroll', onScroll, {passive:true});

Â  // Magnet CTA
Â  document.querySelectorAll('.magnet').forEach(btn=>{
Â  Â  const strength = MOTION_LEVEL==='L'?16: MOTION_LEVEL==='M'?10:6; let rAF=null;
Â  Â  btn.addEventListener('mousemove', e=>{
Â  Â  Â  const r=btn.getBoundingClientRect(), x=e.clientX-r.left-r.width/2, y=e.clientY-r.top-r.height/2;
Â  Â  Â  cancelAnimationFrame(rAF); rAF=requestAnimationFrame(()=> btn.style.transform=`translate(${x/strength}px,${y/strength}px)`);
Â  Â  });
Â  Â  btn.addEventListener('mouseleave', ()=> btn.style.transform='translate(0,0)');
Â  });

Â  // Cursor aura
Â  const aura=document.querySelector('.cursor-aura');
Â  if(aura && matchMedia('(pointer: fine)').matches){
Â  Â  let ax=-9999,ay=-9999,tx=ax,ty=ay; const lag = MOTION_LEVEL==='L'?0.18: MOTION_LEVEL==='M'?0.22:0.28;
Â  Â  window.addEventListener('mousemove', e=>{ tx=e.clientX-aura.offsetWidth/2; ty=e.clientY-aura.offsetHeight/2; aura.style.opacity=.9; }, {passive:true});
Â  Â  (function loop(){ ax+=(tx-ax)*lag; ay+=(ty-ay)*lag; aura.style.transform=`translate3d(${ax}px,${ay}px,0)`; requestAnimationFrame(loop); })();
Â  }

  // Smooth scroll
Â  document.querySelectorAll('a[href^="#"]').forEach(a=>{
Â  Â  a.addEventListener('click', e=>{
Â  Â  Â  const id=a.getAttribute('href').slice(1), t=document.getElementById(id);
Â  Â  Â  if(!t) return; e.preventDefault(); t.scrollIntoView({behavior:'smooth', block:'start'});
Â  Â  });
Â  });

Â  // Projects filter
Â  const filterBar=document.querySelector('.projects-filter');
Â  if(filterBar){
Â  Â  const buttons=filterBar.querySelectorAll('button[data-filter]'); const cards=[...document.querySelectorAll('.project-card')];
Â  Â  buttons.forEach(b=>{
Â  Â  Â  b.addEventListener('click', ()=>{
Â  Â  Â  Â  const f=b.dataset.filter; buttons.forEach(x=>x.classList.remove('active')); b.classList.add('active');
Â  Â  Â  Â  const vis=[],hid=[]; cards.forEach(c=> ((f==='all')||(c.dataset.category===f)?vis:hid).push(c));
Â  Â  Â  Â  const hideDelay=40; hid.forEach((c,i)=>{ c.style.transitionDelay=`${i*hideDelay}ms`; c.style.opacity=.0; c.style.transform='translateY(12px)'; setTimeout(()=> c.style.display='none', 250+i*hideDelay); });
Â  Â  Â  Â  const showDelay=40; setTimeout(()=>{ vis.forEach((c,i)=>{ c.style.display=''; c.style.opacity=.0; c.style.transform='translateY(12px)'; c.style.transition='opacity .45s var(--ease), transform .45s var(--ease)'; c.style.transitionDelay=`${i*showDelay}ms`; requestAnimationFrame(()=>{ c.style.opacity=1; c.style.transform='translateY(0)'; }); }); }, 250+hid.length*hideDelay+60);
Â  Â  Â  });
Â  Â  });
Â  }

Â  // Hack the Code (5-char)
Â  function generateCode(len=5){ const chars='ABCDEFGHJKLMNPQRSTUVWXYZ23456789'; return Array.from({length:len},()=> chars[Math.floor(Math.random()*chars.length)]).join(''); }
Â  let accessCode=generateCode(5);
Â  const termOut=document.getElementById('terminal-output'), termInp=document.getElementById('terminal-input'), termBtn=document.getElementById('terminal-submit');
Â  function printLine(t){ if(termOut){ const p=document.createElement('div'); p.textContent=t; termOut.appendChild(p); termOut.scrollTop=termOut.scrollHeight; } }
Â  printLine('System locked. WprowadÅº 5-znakowy kod dostÄ™pu.');
Â  function speak(t){ try{ const u=new SpeechSynthesisUtterance(t); u.lang='pl-PL'; u.rate=1; u.pitch=1; speechSynthesis.cancel(); speechSynthesis.speak(u);}catch(e){} }
Â  function confetti(){
Â  Â  const n=40; for(let i=0;i<n;i++){ const s=document.createElement('span'); s.style.position='fixed'; s.style.left=(Math.random()*100)+'vw'; s.style.top='-10px'; s.style.width='6px'; s.style.height='10px'; s.style.background=`hsl(${Math.random()*360},90%,60%)`; s.style.opacity='.9'; s.style.transform=`rotate(${Math.random()*360}deg)`; s.style.transition='transform 1.2s linear, top 1.2s linear, opacity .3s ease .9s'; document.body.appendChild(s); requestAnimationFrame(()=>{ s.style.top='110vh'; s.style.transform+=' translateY(100vh)'; s.style.opacity='0'; }); setTimeout(()=> s.remove(),1400); }
Â  }
Â  function handleGuess(){
Â  Â  const v=(termInp?.value||'').trim(); if(!v) return;
Â  Â  if(v.toLowerCase()==='konki'){ printLine('WygraÅ‚eÅ› talon na kurwÄ™ i balon! ðŸš€'); speak('WygraÅ‚eÅ› talon na kurwÄ™ i balon!'); confetti(); termInp.value=''; return; }
Â  Â  if(v.length!==5){ printLine('Kod ma mieÄ‡ 5 znakÃ³w.'); termInp.value=''; return; }
Â  Â  if(v.toUpperCase()===accessCode){ printLine('Odblokowano! âœ…'); speak('Odblokowano!'); confetti(); } else { printLine('BÅ‚Ä™dny kod. SprÃ³buj ponownie.'); }
Â  Â  termInp.value='';
Â  }
Â  termBtn?.addEventListener('click', handleGuess);
Â  termInp?.addEventListener('keydown', e=>{ if(e.key==='Enter') handleGuess(); });
});
